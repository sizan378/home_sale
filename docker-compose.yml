version: '3.3'

services:
  home-sales:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    # ports:
      # - "8008:8008"
    env_file:
      - .env
    depends_on:
      - postgres-db
      - redis
    networks:
      - homesale

  postgres-db:
    image: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

    networks:
      - homesale

  redis:
    image: redis:latest
    networks:
      - homesale

  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres-db
    networks:
      - homesale

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    # command: celery --broker=redis://redis:6379/0 flower --port=5555
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - redis
      - postgres-db
      - celery_worker
    networks:
      - homesale

  nginx:
    restart: always
    depends_on:
      - home-sales
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - "8008:80"
    networks:
      - homesale

networks:
  homesale:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
